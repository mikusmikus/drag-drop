{"version":3,"sources":["components/DragNDrop/DragNDrop.module.scss","components/DragNDrop/DragnDrop.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.scss"],"names":["module","exports","dragNode","dragNodeDelete","dragStartItem","grpI","itemI","DragNDrop","data","useState","list","setList","dragging","setDragging","inputValue","setInputValue","dragEndHandler","console","log","dragDeleteHandler","removeEventListener","undefined","dragEnterHandler","e","params","currentItem","target","oldList","newList","cloneDeep","items","splice","getStyles","style","current","handleNothing","className","onDragEnter","addTaskWrapper","type","input","value","onChange","button","onClick","push","alert","addNewNoteHandler","ImageWrapper","setDeleteEvent","src","alt","Image","map","grp","dndGroup","length","dragGroupHandler","groupTitle","title","item","dndItem","progress","done","draggable","onDragStart","event","addEventListener","setTimeout","dragStartHandler","paragraph","App","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAW,4BAA4B,QAAU,2BAA2B,WAAa,8BAA8B,SAAW,4BAA4B,KAAO,wBAAwB,QAAU,2BAA2B,aAAe,gCAAgC,MAAQ,yBAAyB,eAAiB,kCAAkC,MAAQ,yBAAyB,OAAS,4B,2CCOtcC,EAEAC,E,4FADAC,EAAwB,CAAEC,KAAM,GAAIC,MAAO,IAuKhCC,EA5Jc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACjBC,mBAASD,GADQ,mBAClCE,EADkC,KAC5BC,EAD4B,OAETF,oBAAS,GAFA,mBAElCG,EAFkC,KAExBC,EAFwB,OAGLJ,mBAAS,IAHJ,mBAGlCK,EAHkC,KAGtBC,EAHsB,KAgBnCC,EAAiB,SAAjBA,IACJC,QAAQC,IAAI,4BACZC,IACAjB,EAASkB,oBAAoB,UAAWJ,GACxCZ,EAAgB,CAAEC,KAAM,EAAGC,MAAO,GAElCJ,OAAWmB,EAEXlB,OAAiBkB,EACjBR,GAAY,IAORS,EAAmB,SAACC,EAAoCC,GAC5DP,QAAQC,IAAI,uBAAwBM,GAEpCrB,OAAiBkB,EACjB,IAAMI,EAAcrB,EAChBF,IAAaqB,EAAEG,QAEjBf,GAAQ,SAACgB,GACP,IAAMC,EAAUC,oBAAUF,GAO1B,OANAC,EAAQJ,EAAOnB,MAAMyB,MAAMC,OACzBP,EAAOlB,MACP,EACAsB,EAAQH,EAAYpB,MAAMyB,MAAMC,OAAON,EAAYnB,MAAO,GAAG,IAE/DF,EAAgBoB,EACTI,MAIPT,EAAoB,WACxB,IAAMM,EAAcrB,EACpB,GAAID,EAAgB,CAElB,IAAMyB,EAAUC,oBAAUnB,GAC1BkB,EAAQH,EAAYpB,MAAMyB,MAAMC,OAAON,EAAYnB,MAAO,GAC1DK,EAAQiB,KAINI,EAAY,SAACR,GACjB,GAAIpB,EAAcC,OAASmB,EAAOnB,MAAQD,EAAcE,QAAUkB,EAAOlB,MACvE,OAAO2B,IAAMC,SAIXC,EAAgB,WACpBlB,QAAQC,IAAI,sBAqBd,OACE,qCACE,sBAAKkB,UAAU,gBAAf,UACE,qBACEA,UAAU,YACVC,YAAa,WAEXlC,OAAiBkB,GAJrB,SAOE,sBAAKe,UAAWH,IAAMK,eAAtB,UACE,uBACEC,KAAK,OACLH,UAAWH,IAAMO,MACjBC,MAAO3B,EACP4B,SAAU,SAACnB,GAAD,OAAOR,EAAcQ,EAAEG,OAAOe,UAE1C,wBAAQF,KAAK,SAASH,UAAWH,IAAMU,OAAQC,QAAS,kBA7BxC,WACxB,GAAI9B,EAAY,CACd,IAAMc,EAAUC,oBAAUnB,GAC1BkB,EAAQ,GAAGE,MAAMe,KAAK/B,GACtBH,EAAQiB,GACRb,EAAc,SAEd+B,MAAM,YAER/B,EAAc,IAoBwDgC,IAA9D,8BAKJ,qBAAKX,UAAU,WAAf,SACE,qBAAKA,UAAWH,IAAMe,aAAcX,YAAa,SAACd,GAAD,OArFlC,SAACA,GACtBN,QAAQC,IAAI,WACZf,EAAiBoB,EAAEG,OAmF2CuB,CAAe1B,IAAvE,SACE,qBACE2B,IAAI,6HACJC,IAAI,QACJf,UAAWH,IAAMmB,eAKzB,qBAAKhB,UAAU,MAAf,SACE,qBAAKA,UAAWH,IAAM1B,UAAtB,SACGG,EAAK2C,KAAI,SAACC,EAAKjD,GAAN,OACR,qBAAK+B,UAAU,WAAf,SACE,sBACEA,UAAWH,IAAMsB,SACjBlB,YAAa,SAACd,GAAD,OAxDF,SAACA,EAAoCC,GACxDZ,IAAaF,EAAKc,EAAOnB,MAAMyB,MAAM0B,QACvClC,EAAiBC,EAAGC,GAsDUiC,CAAiBlC,EAAG,CAAElB,OAAMC,MAAO,KAFzD,UAIE,qBAAK8B,UAAWH,IAAMyB,WAAtB,SAAmCJ,EAAIK,QACtCL,EAAIxB,MAAMuB,KAAI,SAACO,EAAMtD,GAAP,OACb,qBAEE8B,UAAS,UAAKH,IAAM4B,QAAX,YAAsBjD,GAAYoB,EAAU,CAAE3B,OAAMC,UAApD,YACE,IAATD,GAAc4B,IAAM6B,SADb,YAEI,IAATzD,GAAc4B,IAAM8B,MACxB1B,YACEzB,EAAW,SAACW,GAAD,OAAOD,EAAiBC,EAAG,CAAElB,OAAMC,WAAW6B,EAE3D6B,WAAS,EACTC,YAAa,SAACC,GAAD,OAvIN,SAACA,EAAwC1C,GAChEP,QAAQC,IAAI,mCAAoCM,GAChDpB,EAAgBoB,GAChBtB,EAAWgE,EAAMxC,QAERyC,iBAAiB,UAAWnD,GACrCoD,YAAW,WACTvD,GAAY,KACX,GA+HqCwD,CAAiBH,EAAO,CAAE7D,OAAMC,WAT1D,SAWE,oBAAG8B,UAAWH,IAAMqC,UAApB,UACGhE,EAAQ,EADX,KACgBsD,MAXXA,UARkBN,EAAIK,kBC3IzCnD,EAAO,CACX,CAAEmD,MAAO,SAAU7B,MAAO,CAAC,oBAAgB,mBAAe,eAC1D,CACE6B,MAAO,cACP7B,MAAO,CAAC,sBAAkB,0BAAiB,4BAAmB,oBAEhE,CAAE6B,MAAO,OAAQ7B,MAAO,CAAC,wBAAe,wBAe3ByC,EAZH,WACV,OACE,8BACE,qBAAKnC,UAAU,YAAf,SACE,qBAAKA,UAAWH,IAAMuC,OAAtB,SACE,cAAC,EAAD,CAAWhE,KAAMA,WCLZiE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAzE,EAAOC,QAAU,CAAC,OAAS,uB","file":"static/js/main.7a350d77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DragNDrop\":\"DragNDrop_DragNDrop__22lnZ\",\"dndGroup\":\"DragNDrop_dndGroup__15-kw\",\"dndItem\":\"DragNDrop_dndItem__2XgwZ\",\"groupTitle\":\"DragNDrop_groupTitle__2UpCU\",\"progress\":\"DragNDrop_progress__1RlWL\",\"done\":\"DragNDrop_done__YuYLQ\",\"current\":\"DragNDrop_current__3u5V5\",\"ImageWrapper\":\"DragNDrop_ImageWrapper__1YyDL\",\"Image\":\"DragNDrop_Image__qEcYD\",\"addTaskWrapper\":\"DragNDrop_addTaskWrapper__5LWEm\",\"input\":\"DragNDrop_input__1bSKR\",\"button\":\"DragNDrop_button__2tO4K\"};","/* eslint-disable max-len */\r\n/* eslint-disable consistent-return */\r\nimport React, { FC, useState } from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport style from './DragNDrop.module.scss';\r\nimport 'flexboxgrid';\r\n\r\n// let dragStartItem: Params;\r\nlet dragNode: EventTarget;\r\nlet dragStartItem: Params = { grpI: 99, itemI: 99 };\r\nlet dragNodeDelete: EventTarget;\r\n\r\ntype Props = {\r\n  data: {\r\n    title: string;\r\n    items: string[];\r\n  }[];\r\n};\r\ntype Params = { grpI: number; itemI: number };\r\n\r\nconst DragNDrop: FC<Props> = ({ data }) => {\r\n  const [list, setList] = useState(data);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const dragStartHandler = (event: React.DragEvent<HTMLDivElement>, params: Params) => {\r\n    console.log('started dragging item coordinate', params);\r\n    dragStartItem = params;\r\n    dragNode = event.target;\r\n\r\n    dragNode.addEventListener('dragend', dragEndHandler);\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const dragEndHandler = () => {\r\n    console.log('dragEndhandler activated');\r\n    dragDeleteHandler();\r\n    dragNode.removeEventListener('dragend', dragEndHandler);\r\n    dragStartItem = { grpI: 0, itemI: 0 };\r\n    // @ts-ignore\r\n    dragNode = undefined;\r\n    // @ts-ignore\r\n    dragNodeDelete = undefined;\r\n    setDragging(false);\r\n  };\r\n  const setDeleteEvent = (e: React.DragEvent<HTMLDivElement>) => {\r\n    console.log('entered');\r\n    dragNodeDelete = e.target;\r\n  };\r\n\r\n  const dragEnterHandler = (e: React.DragEvent<HTMLDivElement>, params: Params) => {\r\n    console.log('entered new position', params);\r\n    // @ts-ignore\r\n    dragNodeDelete = undefined;\r\n    const currentItem = dragStartItem;\r\n    if (dragNode !== e.target) {\r\n      // so vajadzetu precizak izprast!\r\n      setList((oldList) => {\r\n        const newList = cloneDeep(oldList);\r\n        newList[params.grpI].items.splice(\r\n          params.itemI,\r\n          0,\r\n          newList[currentItem.grpI].items.splice(currentItem.itemI, 1)[0]\r\n        );\r\n        dragStartItem = params;\r\n        return newList;\r\n      });\r\n    }\r\n  };\r\n  const dragDeleteHandler = () => {\r\n    const currentItem = dragStartItem;\r\n    if (dragNodeDelete) {\r\n      // setDragging(false);\r\n      const newList = cloneDeep(list);\r\n      newList[currentItem.grpI].items.splice(currentItem.itemI, 1);\r\n      setList(newList);\r\n    }\r\n  };\r\n\r\n  const getStyles = (params: Params) => {\r\n    if (dragStartItem.grpI === params.grpI && dragStartItem.itemI === params.itemI) {\r\n      return style.current;\r\n    }\r\n  };\r\n\r\n  const handleNothing = () => {\r\n    console.log('nothing to handle');\r\n  };\r\n\r\n  const dragGroupHandler = (e: React.DragEvent<HTMLDivElement>, params: Params) => {\r\n    if (dragging && !list[params.grpI].items.length) {\r\n      dragEnterHandler(e, params);\r\n    }\r\n  };\r\n\r\n  const addNewNoteHandler = () => {\r\n    if (inputValue) {\r\n      const newList = cloneDeep(list);\r\n      newList[0].items.push(inputValue);\r\n      setList(newList);\r\n      setInputValue('');\r\n    } else {\r\n      alert('add note'); \r\n    }\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row middle-xs\">\r\n        <div\r\n          className=\"col-xs-11\"\r\n          onDragEnter={() => {\r\n            // @ts-ignore\r\n            dragNodeDelete = undefined;\r\n          }}\r\n        >\r\n          <div className={style.addTaskWrapper}>\r\n            <input\r\n              type=\"text\"\r\n              className={style.input}\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <button type=\"button\" className={style.button} onClick={() => addNewNoteHandler()}>\r\n              Add note...\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xs-1\">\r\n          <div className={style.ImageWrapper} onDragEnter={(e) => setDeleteEvent(e)}>\r\n            <img\r\n              src=\"https://st2.depositphotos.com/5266903/8456/v/600/depositphotos_84569362-stock-illustration-trash-can-flat-yellow-color.jpg\"\r\n              alt=\"trash\"\r\n              className={style.Image}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className={style.DragNDrop}>\r\n          {list.map((grp, grpI) => (\r\n            <div className=\"col-xs-4\" key={grp.title}>\r\n              <div\r\n                className={style.dndGroup}\r\n                onDragEnter={(e) => dragGroupHandler(e, { grpI, itemI: 0 })}\r\n              >\r\n                <div className={style.groupTitle}>{grp.title}</div>\r\n                {grp.items.map((item, itemI) => (\r\n                  <div\r\n                    key={item}\r\n                    className={`${style.dndItem} ${dragging && getStyles({ grpI, itemI })} ${\r\n                      grpI === 1 && style.progress\r\n                    } ${grpI === 2 && style.done}`}\r\n                    onDragEnter={\r\n                      dragging ? (e) => dragEnterHandler(e, { grpI, itemI }) : handleNothing\r\n                    }\r\n                    draggable\r\n                    onDragStart={(event) => dragStartHandler(event, { grpI, itemI })}\r\n                  >\r\n                    <p className={style.paragraph}>\r\n                      {itemI + 1}. {item}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragNDrop;\r\n","import React from 'react';\nimport style from './App.module.scss';\nimport 'flexboxgrid';\nimport DragNDrop from './components/DragNDrop/DragnDrop';\n\nconst data = [\n  { title: 'to do!', items: ['Nopērc pienu', 'uztaisi ēst', 'izpildi md'] },\n  {\n    title: 'in progress',\n    items: ['sakārto istabu', 'salabo mašīnu', 'iemarinē gurķus', 'apēst zupu'],\n  },\n  { title: 'done', items: ['novākt ražu', 'papaijāt suni'] },\n];\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <div className={style.header}>\n          <DragNDrop data={data} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2K09A\"};"],"sourceRoot":""}